import schedule
import time
from datetime import datetime
from avito_scraper import AdvancedAvitoScraper
from telegram_bot import TelegramBot
from database import ApartmentDB
from config import CHECK_INTERVAL


class AdvancedApartmentMonitor:
    def __init__(self):
        self.scraper = AdvancedAvitoScraper()
        self.bot = TelegramBot()
        self.db = ApartmentDB()
        self.last_block_notification = 0
        self.consecutive_blocks = 0

    def check_new_apartments(self):
        """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –Ω–æ–≤—ã—Ö –∫–≤–∞—Ä—Ç–∏—Ä"""
        current_time = datetime.now()
        print(f"[{current_time}] üîç –†–∞—Å—à–∏—Ä–µ–Ω–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –∫–≤–∞—Ä—Ç–∏—Ä...")

        try:
            results = self.scraper.get_apartments()
            new_apartments_count = 0

            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞ –±–ª–æ–∫–∏—Ä–æ–≤–∫—É
            for result in results:
                if isinstance(result, dict) and result.get('blocked'):
                    self.handle_block_notification(result)
                    return  # –ü—Ä–µ–∫—Ä–∞—â–∞–µ–º –æ–±—Ä–∞–±–æ—Ç–∫—É –ø—Ä–∏ –±–ª–æ–∫–∏—Ä–æ–≤–∫–µ

                # –û–±—ã—á–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ –∫–≤–∞—Ä—Ç–∏—Ä
                if self.db.is_new_apartment(result):
                    print(f"‚úÖ –ù–æ–≤–∞—è –∫–≤–∞—Ä—Ç–∏—Ä–∞: {result['title'][:50]}...")

                    self.bot.send_apartment_notification(result)
                    self.db.add_apartment(result)

                    new_apartments_count += 1
                    time.sleep(2)

            # –°–±—Ä–æ—Å —Å—á–µ—Ç—á–∏–∫–∞ –±–ª–æ–∫–∏—Ä–æ–≤–æ–∫ –ø—Ä–∏ —É—Å–ø–µ—à–Ω–æ–π —Ä–∞–±–æ—Ç–µ
            self.consecutive_blocks = 0

            if new_apartments_count > 0:
                print(f"üìä –ù–∞–π–¥–µ–Ω–æ –Ω–æ–≤—ã—Ö –∫–≤–∞—Ä—Ç–∏—Ä: {new_apartments_count}")
                self.bot.send_status_message(f"‚úÖ –ù–∞–π–¥–µ–Ω–æ {new_apartments_count} –Ω–æ–≤—ã—Ö –∫–≤–∞—Ä—Ç–∏—Ä")
            else:
                print("üì≠ –ù–æ–≤—ã—Ö –∫–≤–∞—Ä—Ç–∏—Ä –Ω–µ –Ω–∞–π–¥–µ–Ω–æ")

        except Exception as e:
            error_msg = f"‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {str(e)}"
            print(error_msg)
            self.bot.send_message(error_msg)

    def handle_block_notification(self, block_info):
        """–û–±—Ä–∞–±–æ—Ç–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –æ –±–ª–æ–∫–∏—Ä–æ–≤–∫–µ"""
        self.consecutive_blocks += 1
        current_time = time.time()

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –Ω–µ —á–∞—â–µ —á–µ–º —Ä–∞–∑ –≤ 30 –º–∏–Ω—É—Ç
        if current_time - self.last_block_notification > 1800:  # 30 –º–∏–Ω—É—Ç

            block_message = f"""
üö´ **AVITO –ë–õ–û–ö–ò–†–£–ï–¢ IP –ê–î–†–ï–°**

‚è∞ **–í—Ä–µ–º—è –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏:** {block_info['timestamp'].strftime('%H:%M:%S')}
üî¢ **–ù–æ–º–µ—Ä –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏:** #{block_info['block_count']}
üéØ **–ü–æ–¥—Ä—è–¥ –±–ª–æ–∫–∏—Ä–æ–≤–æ–∫:** {self.consecutive_blocks}
üåê **–ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–æ –ø—Ä–æ–∫—Å–∏:** {block_info['blocked_proxies']}

üîÑ **–î–µ–π—Å—Ç–≤–∏—è:**
‚Ä¢ –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –Ω–∞ –Ω–æ–≤—ã–π –ø—Ä–æ–∫—Å–∏
‚Ä¢ –û—á–∏—Å—Ç–∫–∞ cookies –∏ —Å–µ—Å—Å–∏–∏  
‚Ä¢ –ü–∞—É–∑–∞ –Ω–∞ 1 —á–∞—Å –¥–ª—è —Å–Ω—è—Ç–∏—è –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏

‚ö†Ô∏è **–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:**
‚Ä¢ –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∫–∞—á–µ—Å—Ç–≤–æ –ø—Ä–æ–∫—Å–∏
‚Ä¢ –£–≤–µ–ª–∏—á—å—Ç–µ –∏–Ω—Ç–µ—Ä–≤–∞–ª—ã –º–µ–∂–¥—É –∑–∞–ø—Ä–æ—Å–∞–º–∏
‚Ä¢ –†–∞—Å—Å–º–æ—Ç—Ä–∏—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –º–æ–±–∏–ª—å–Ω—ã—Ö –ø—Ä–æ–∫—Å–∏

ü§ñ –ë–æ—Ç –ø—Ä–æ–¥–æ–ª–∂–∏—Ç —Ä–∞–±–æ—Ç—É –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏
            """

            self.bot.send_message(block_message.strip())
            self.last_block_notification = current_time

            print(f"[Monitor] üì® –û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –±–ª–æ–∫–∏—Ä–æ–≤–∫–µ #{block_info['block_count']}")

    def daily_cleanup(self):
        """–ï–∂–µ–¥–Ω–µ–≤–Ω–∞—è –æ—á–∏—Å—Ç–∫–∞"""
        try:
            deleted = self.db.clean_old_apartments(days_old=7)
            if deleted > 0:
                print(f"üóëÔ∏è –£–¥–∞–ª–µ–Ω–æ —Å—Ç–∞—Ä—ã—Ö –∑–∞–ø–∏—Å–µ–π: {deleted}")

            # –°–±—Ä–æ—Å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –±–ª–æ–∫–∏—Ä–æ–≤–æ–∫
            self.consecutive_blocks = 0

        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—á–∏—Å—Ç–∫–µ –±–∞–∑—ã: {e}")

    def start_monitoring(self):
        """–ó–∞–ø—É—Å–∫ —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω–æ–≥–æ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞"""
        print("üöÄ –ó–∞–ø—É—Å–∫ —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω–æ–≥–æ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ Avito...")
        print("üõ°Ô∏è –ê–∫—Ç–∏–≤–Ω–∞ –∑–∞—â–∏—Ç–∞ –æ—Ç –±–ª–æ–∫–∏—Ä–æ–≤–æ–∫ —Å –ø—Ä–æ–∫—Å–∏ –∏ cookies")

        self.bot.send_status_message("""
üöÄ **–†–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–π –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –∑–∞–ø—É—â–µ–Ω!**

üõ°Ô∏è **–ù–æ–≤—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏:**
‚Ä¢ Selenium —Å –º–∞—Å–∫–∏—Ä–æ–≤–∫–æ–π –ø–æ–¥ –±—Ä–∞—É–∑–µ—Ä
‚Ä¢ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è —Ä–æ—Ç–∞—Ü–∏—è –ø—Ä–æ–∫—Å–∏
‚Ä¢ –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ cookies
‚Ä¢ –£–º–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ –±–ª–æ–∫–∏—Ä–æ–≤–æ–∫ IP
‚Ä¢ –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ —Å—Ç–∞—Ç—É—Å–µ —Ä–∞–±–æ—Ç—ã

‚ö° –ì–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ –≤ —É—Å–ª–æ–∂–Ω–µ–Ω–Ω—ã—Ö —É—Å–ª–æ–≤–∏—è—Ö!
        """)

        # –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º –∏–Ω—Ç–µ—Ä–≤–∞–ª –¥–ª—è —Å—Ç–∞–±–∏–ª—å–Ω–æ–π —Ä–∞–±–æ—Ç—ã
        interval = max(CHECK_INTERVAL, 1800)  # –ú–∏–Ω–∏–º—É–º 30 –º–∏–Ω—É—Ç
        schedule.every(interval).seconds.do(self.check_new_apartments)
        schedule.every().day.at("06:00").do(self.daily_cleanup)

        # –ü–µ—Ä–≤–æ–Ω–∞—á–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞
        self.check_new_apartments()

        # –û—Å–Ω–æ–≤–Ω–æ–π —Ü–∏–∫–ª
        while True:
            try:
                schedule.run_pending()
                time.sleep(60)  # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –∫–∞–∂–¥—É—é –º–∏–Ω—É—Ç—É
            except KeyboardInterrupt:
                print("\nüõë –ü–æ–ª—É—á–µ–Ω —Å–∏–≥–Ω–∞–ª –æ—Å—Ç–∞–Ω–æ–≤–∫–∏...")
                self.cleanup()
                break
            except Exception as e:
                print(f"‚ùå –û—à–∏–±–∫–∞ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ —Ü–∏–∫–ª–∞: {e}")
                time.sleep(300)  # –ü–∞—É–∑–∞ 5 –º–∏–Ω—É—Ç –ø—Ä–∏ –æ—à–∏–±–∫–µ

    def cleanup(self):
        """–û—á–∏—Å—Ç–∫–∞ —Ä–µ—Å—É—Ä—Å–æ–≤ –ø—Ä–∏ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–∏"""
        print("üßπ –û—á–∏—Å—Ç–∫–∞ —Ä–µ—Å—É—Ä—Å–æ–≤...")
        self.scraper.cleanup()
        self.bot.send_status_message("üõë –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")


if __name__ == "__main__":
    monitor = AdvancedApartmentMonitor()
    try:
        monitor.start_monitoring()
    except KeyboardInterrupt:
        monitor.cleanup()
