import requests
import time
from concurrent.futures import ThreadPoolExecutor, as_completed
import csv


class ProxyChecker:
    def __init__(self):
        self.working_proxies = []
        self.failed_proxies = []

    def check_single_proxy(self, proxy):
        """Проверка одного прокси"""
        proxy_formats = [
            {'http': f'http://{proxy}', 'https': f'http://{proxy}'},  # HTTP
            {'http': f'socks5://{proxy}', 'https': f'socks5://{proxy}'},  # SOCKS5
            {'http': f'socks4://{proxy}', 'https': f'socks4://{proxy}'}  # SOCKS4
        ]

        for i, proxy_dict in enumerate(proxy_formats):
            try:
                response = requests.get('http://httpbin.org/ip',
                                        proxies=proxy_dict,
                                        timeout=10)
                if response.status_code == 200:
                    data = response.json()
                    protocol = ['HTTP', 'SOCKS5', 'SOCKS4'][i]
                    return {
                        'proxy': proxy,
                        'status': 'WORKING',
                        'protocol': protocol,
                        'ip': data.get('origin', 'Unknown'),
                        'response_time': response.elapsed.total_seconds()
                    }
            except Exception as e:
                continue

        return {
            'proxy': proxy,
            'status': 'FAILED',
            'protocol': 'None',
            'ip': 'None',
            'response_time': 0
        }

    def check_proxy_list(self, proxy_list, max_workers=10):
        """Проверка списка прокси"""
        results = []

        print(f"[ProxyChecker] Проверка {len(proxy_list)} прокси...")

        with ThreadPoolExecutor(max_workers=max_workers) as executor:
            futures = {executor.submit(self.check_single_proxy, proxy): proxy
                       for proxy in proxy_list}

            completed = 0
            for future in as_completed(futures):
                result = future.result()
                results.append(result)

                completed += 1
                if completed % 10 == 0:
                    print(f"[ProxyChecker] Проверено {completed}/{len(proxy_list)}")

                if result['status'] == 'WORKING':
                    self.working_proxies.append(result)
                    print(f"✅ РАБОЧИЙ: {result['proxy']} ({result['protocol']}) - {result['response_time']:.2f}s")
                else:
                    self.failed_proxies.append(result)

        return results

    def save_results(self, results, filename='proxy_results.csv'):
        """Сохранение результатов в CSV"""
        with open(filename, 'w', newline='', encoding='utf-8') as csvfile:
            fieldnames = ['proxy', 'status', 'protocol', 'ip', 'response_time']
            writer = csv.DictWriter(csvfile, fieldnames=fieldnames)

            writer.writeheader()
            for result in results:
                writer.writerow(result)

        print(f"[ProxyChecker] Результаты сохранены в {filename}")

    def save_working_proxies(self, filename='working_proxies.txt'):
        """Сохранение только рабочих прокси"""
        with open(filename, 'w') as f:
            for proxy in self.working_proxies:
                f.write(f"{proxy['proxy']}\n")

        print(f"[ProxyChecker] Рабочие прокси сохранены в {filename}")


# Ваш список прокси
proxy_list_text = '''
51.210.4.123:60414
202.51.103.154:5678
31.172.133.253:4153
138.255.240.66:40736
149.202.94.235:9069
50.235.117.234:39593
45.128.133.141:1080
109.72.100.109:48293
61.7.147.227:4145
84.247.236.86:48293
67.206.213.202:55555
91.206.14.184:1080
181.236.221.138:4145
195.26.226.211:1080
103.245.96.124:6969
176.120.32.135:5678
64.139.79.35:54321
103.148.112.245:8199
8.42.68.93:39593
43.251.86.69:1080
196.0.113.10:31651
196.250.225.146:60606
77.46.138.37:33608
46.8.60.2:1080
103.118.175.165:8199
212.47.253.24:16379
112.221.46.117:4153
80.65.80.230:5678
202.5.54.70:4145
138.68.60.8:80
103.148.112.242:8199
43.153.28.68:3128
31.42.6.125:5678
64.110.82.7:8080
167.172.138.48:49167
154.16.146.44:80
31.13.239.4:5678
193.106.57.96:5678
103.4.118.130:5678
198.199.86.11:8080
37.44.238.2:57167
23.247.136.254:80
209.97.150.167:8080
103.138.123.242:8082
194.1.188.8:60606
212.103.118.77:5678
138.186.155.2:1085
62.201.212.198:4673
103.17.90.6:5678
103.146.185.82:1081
181.209.82.154:14888
51.15.232.175:16379
97.105.12.186:4153
157.66.251.227:8080
46.175.253.125:1080
42.96.16.176:1312
20.54.244.246:3128
203.115.106.90:60606
163.172.167.106:16379
176.9.238.155:16379
168.196.24.29:60606
185.32.4.102:4153
24.172.34.114:49920
46.99.178.155:1339
149.86.152.226:8080
45.79.203.254:48388
47.251.43.115:33333
187.84.176.20:8080
80.78.73.120:65530
163.47.37.190:1080
36.64.181.82:8080
80.92.227.185:5678
83.234.147.166:6363
115.75.160.196:5678
181.48.243.194:4153
103.148.112.247:8199
103.148.112.69:8199
157.10.97.119:8181
31.131.199.127:3629
212.110.188.201:34408
177.130.104.86:33333
202.40.181.220:31247
47.252.29.28:11222
45.168.244.16:8080
103.133.26.45:8080
46.8.60.34:1080
157.20.253.43:8989
223.135.156.183:8080
49.0.2.243:5430
27.79.206.225:16000
114.108.177.104:60984
196.0.87.98:5678
185.161.186.92:54321
82.147.153.2:4153
113.162.238.200:20399
103.182.240.75:1080
112.216.83.10:3128
103.39.51.156:1090
64.181.240.152:3128
109.238.208.130:4153
91.150.189.122:60647
192.73.244.36:80
180.191.20.35:8082
103.12.161.222:1080
85.239.144.149:8080
41.59.90.175:80
103.141.148.62:5678
20.83.154.79:7070
147.75.34.105:443
51.158.71.156:16379
172.99.187.33:4145
165.154.36.27:10080
38.54.71.67:80
42.118.24.188:16000
41.59.90.168:80
152.53.194.46:8065
47.89.184.18:3128
41.59.90.171:80
190.220.1.173:35376
154.118.231.30:80
41.191.203.161:80
49.156.44.115:8080
27.79.176.68:16000
209.121.164.50:31147
82.102.10.253:80
47.90.205.231:33333
42.118.2.137:16000
41.191.203.162:80
191.97.20.83:999
185.132.1.221:4145
123.141.181.49:5031
37.120.162.180:50867
133.18.234.13:80
27.79.178.6:16000
8.213.151.128:3128
103.94.52.70:3128
90.162.35.34:80
45.174.95.142:999
221.202.27.194:10809
47.74.157.194:80
42.118.1.72:16000
45.166.93.113:999
41.223.119.156:3128
23.247.136.248:80
190.103.177.131:80
198.49.68.80:80
27.71.139.208:16000
8.219.97.248:80
103.65.237.92:5678
45.146.163.31:80
20.41.240.154:3128
219.65.73.81:80
200.174.198.86:8888
123.141.181.8:5031
219.93.101.63:80
185.82.218.85:80
91.107.147.219:80
65.108.203.36:28080
85.133.240.75:8080
4.195.16.140:80
219.93.101.60:80
209.121.164.51:31147
89.58.57.45:80
38.147.98.190:8080
123.30.154.171:7777
123.141.181.1:5031
94.182.146.250:8080
47.91.104.88:3128
47.243.92.199:3128
59.7.246.4:80
104.222.32.98:80
161.35.70.249:8080
57.129.81.201:8080
154.62.226.126:8888
159.69.57.20:8880
23.237.210.82:80
140.238.64.65:80
181.174.164.221:80
66.36.234.130:1339
4.156.78.45:80
176.126.103.194:44214
89.58.55.33:80
47.91.65.23:3128
35.197.89.213:80
123.141.181.44:5031
92.67.186.210:80
108.141.130.146:80
152.53.107.230:80
4.245.123.244:80
150.230.249.42:42311
103.127.223.126:1080
115.75.163.225:5678
130.193.123.34:5678
203.190.8.59:1088
181.28.137.18:5678
88.87.79.18:3629
46.146.204.175:1080
192.163.200.82:17071
190.122.144.23:5678
110.77.135.70:4145
115.187.50.40:5678
110.74.195.152:1080
179.189.219.98:4145
213.165.185.211:4153
152.53.168.53:36435
212.47.232.197:16379
110.39.40.118:1088
181.204.4.74:5678
202.69.38.42:5678
103.210.31.49:31433
129.205.244.158:1080
38.51.243.173:5678
51.158.68.28:16379
103.174.122.197:8199
103.97.140.157:1080
97.83.40.67:5678
186.190.228.83:4153
202.70.80.153:5678
201.204.47.66:5678
103.118.127.222:4153
202.40.177.94:5678
142.54.235.9:4145
91.247.92.63:5678
88.213.214.254:4145
188.165.220.50:62878
89.46.249.254:5555
103.174.236.57:1081
78.37.113.28:5555
115.127.188.214:1080
154.79.248.156:5678
125.25.57.57:4153
125.26.4.197:4145
195.78.100.186:3629
87.121.49.238:4145
103.239.201.10:58765
27.71.228.21:3128
37.26.86.206:4145
114.4.200.222:5678
182.253.40.33:4153
94.247.241.70:51006
202.179.91.97:51951
80.78.77.52:65530
103.86.57.9:4145
216.155.93.238:5678
163.172.187.22:16379
80.90.89.122:4153
140.82.35.234:44444
51.210.156.30:51771
103.172.71.204:1080
85.237.62.189:3629
200.108.50.254:4145
104.200.152.30:4145
187.216.144.170:5678
51.15.210.52:16379
51.15.205.29:16379
77.65.50.118:34159
190.13.147.93:5678
76.81.6.107:31008
45.70.201.64:999
50.96.204.251:18351
103.247.22.82:12
191.45.33.59:4145
185.32.4.110:4153
49.254.107.184:28766
185.170.233.103:47574
74.62.23.242:39593
113.160.154.7:4153
186.47.213.158:5678
103.131.156.90:6789
103.240.108.198:8090
190.109.72.25:33633
157.100.56.46:999
129.213.68.20:54321
170.233.30.33:4153
51.15.139.14:16379
181.48.217.158:5678
217.219.162.114:5678
185.19.4.22:3128
183.88.219.206:34676
103.247.21.226:1111
36.95.231.205:5678
159.148.146.65:5678
103.132.52.32:8080
36.67.14.195:5678
157.66.84.30:7777
103.255.222.1:80
83.218.186.22:5678
212.47.227.134:16379
103.171.31.11:8080
95.128.142.76:1080
138.59.11.192:999
110.93.205.50:5678
8.215.31.146:1347
202.148.8.130:64321
197.215.220.18:1080
27.71.139.254:16000
139.162.151.176:9050
203.76.98.21:45958
103.166.107.2:8080
177.200.82.190:5678
180.191.22.50:4153
190.2.104.201:4153
124.6.51.226:8099
27.79.132.13:16000
128.201.119.238:999
98.154.21.253:4228
198.8.94.170:4145
27.72.73.143:4153
163.172.172.161:16379
204.252.115.96:3128
103.81.194.127:8888
154.65.39.7:80
147.45.232.203:8080
115.127.98.18:58080
24.76.21.10:5678
77.105.137.42:8080
103.144.102.82:8080
41.65.160.173:1976
170.81.131.70:3128
202.142.178.206:1080
154.236.177.102:1977
200.24.130.146:999
188.166.230.109:31028
5.160.146.195:8080
124.6.51.227:8099
173.209.63.66:8232
103.247.23.28:9223
27.71.129.110:16000
94.155.175.135:8080
103.56.206.77:8099
213.231.7.10:3629
223.25.110.37:8199
49.207.177.65:5678
91.247.250.215:4145
60.171.194.50:9300
8.210.219.52:1111
113.160.132.195:8080
194.152.50.92:5678
109.135.16.145:8789
14.225.240.23:8562
91.84.99.28:80
128.199.202.122:8080
65.108.251.40:16161
91.192.25.158:4145
51.254.78.223:80
157.10.90.17:8080
91.121.208.196:5062
159.203.61.169:3128
173.209.63.68:8047
139.162.78.109:8080
34.122.187.196:80
103.151.226.242:8088
124.108.6.20:8085
8.209.255.13:3128
72.10.164.178:14173
203.95.198.122:8080
123.141.181.54:5031
123.141.181.53:5031
43.156.183.112:1080
123.141.181.7:5031
103.249.120.207:80
51.159.159.73:80
78.28.152.113:80
79.174.12.190:80
84.39.112.144:3128
185.161.186.82:54321
163.47.174.47:1080
41.190.92.50:60606
51.15.241.236:16379
49.229.36.210:4153
43.248.25.6:4145
46.10.71.235:4145
177.222.60.138:5678
93.183.125.11:1080
115.85.72.204:5678
159.192.97.129:5678
202.123.183.66:5678
223.25.109.114:8199
223.25.109.163:8199
45.115.1.14:5678
103.13.192.217:1080
109.238.219.225:4153
78.111.112.118:4145
103.228.117.118:48293
185.30.43.65:60606
103.158.253.33:5678
179.27.86.36:4153
213.21.53.119:4153
115.127.172.70:5678
103.81.194.17:7777
8.219.103.190:1111
195.29.122.132:60606
1.4.195.114:4145
190.180.34.163:5678
190.13.147.241:5678
47.176.213.210:39593
187.17.201.203:38737
170.238.239.71:60606
45.238.57.1:3629
83.220.46.106:4145
103.102.142.98:4145
178.215.163.218:4145
103.112.55.166:1088
41.164.30.66:60606
119.235.50.246:4153
45.117.29.129:10888
92.42.8.23:4153
213.249.123.18:1080
176.235.182.90:1080
191.243.46.33:43241
154.0.14.116:3128
103.175.127.230:60606
116.118.98.10:5678
119.18.146.92:9090
88.245.138.87:1080
103.156.248.241:8080
45.113.80.37:9050
109.68.189.22:54643
94.158.83.19:19485
186.96.97.202:999
69.36.63.128:1080
131.255.227.168:3128
109.224.22.35:51372
177.132.188.44:4153
176.105.199.153:8010
186.159.125.34:8080
181.143.64.100:48293
37.131.165.19:59341
200.8.19.122:8080
103.161.69.217:8469
8.210.166.34:1122
27.147.144.230:58080
103.231.236.235:8182
186.65.106.90:2024
175.144.198.226:31694
194.44.177.225:8080
200.35.148.98:999
103.18.77.154:8085
83.56.15.57:5678
121.101.133.220:8080
212.47.243.66:16379
209.14.118.116:999
157.20.157.24:8080
124.83.43.145:8080
103.48.68.110:82
138.117.231.133:999
123.200.5.146:57775
179.1.128.42:9992
62.255.223.195:8080
167.172.253.162:4857
43.252.236.114:1080
12.218.209.130:13326
103.247.23.187:8080
152.53.194.55:44000
160.251.142.232:80
185.41.152.110:3128
209.97.150.167:80
'''  # добавьте остальные прокси

if __name__ == "__main__":
    # Парсим прокси
    proxies = [x.strip() for x in proxy_list_text.strip().split('\n') if x.strip()]

    # Создаем чекер
    checker = ProxyChecker()

    # Проверяем все прокси
    results = checker.check_proxy_list(proxies, max_workers=5)  # уменьшенное количество потоков

    # Выводим статистику
    working_count = len(checker.working_proxies)
    failed_count = len(checker.failed_proxies)

    print(f"\n📊 СТАТИСТИКА:")
    print(f"✅ Рабочих прокси: {working_count}")
    print(f"❌ Нерабочих прокси: {failed_count}")
    print(f"📈 Процент успеха: {(working_count / (working_count + failed_count) * 100):.1f}%")

    if working_count > 0:
        print(f"\n🎯 РАБОЧИЕ ПРОКСИ:")
        for proxy in checker.working_proxies:
            print(f"  {proxy['proxy']} ({proxy['protocol']}) - {proxy['response_time']:.2f}s")

    # Сохраняем результаты
    checker.save_results(results)
    if working_count > 0:
        checker.save_working_proxies()
